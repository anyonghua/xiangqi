{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0dbef0b2ebcbe9f00606","webpack:///./src/common/define.ts","webpack:///./src/common/Point.ts","webpack:///./src/common/Rule.ts","webpack:///./src/common/Move.ts","webpack:///./src/common/Piece.ts","webpack:///./src/UI/common/Widget.ts","webpack:///./src/common/Rect.ts","webpack:///./src/index.ts","webpack:///./src/Manager.ts","webpack:///./src/common/Board.ts","webpack:///./src/common/BoardBase.ts","webpack:///./src/ManagerBase.ts","webpack:///./src/UI/Board.ts","webpack:///./src/UI/BoardBase.ts","webpack:///./src/UI/common/View.ts","webpack:///./src/UI/Piece.ts","webpack:///./src/UI/Record.ts","webpack:///./src/Message.ts","webpack:///./src/Setting.ts","webpack:///./src/UI/setting/Layout.ts","webpack:///./src/UI/setting/BoardStyle.ts","webpack:///./src/UI/setting/PieceStyle.ts","webpack:///./src/AI/SearchEngines/IterativeDeepeningNegaScout_TT_HH.ts","webpack:///./src/AI/SearchEngine.ts","webpack:///./src/AI/HistoryHeuristic.ts","webpack:///./src/AI/TranspositionTable.ts","webpack:///./src/common/tools.ts","webpack:///./src/AI/Evaluators/SimpleEvaluator.ts","webpack:///./src/AI/Evaluator.ts","webpack:///./src/AI/MoveGenerators/SimpleMoveGenerator.ts","webpack:///./src/AI/MoveGenerator.ts","webpack:///./src/common/Notation.ts"],"names":[],"mappings":"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","file":"xiangqi.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Xiangqi\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Xiangqi\"] = factory();\n\telse\n\t\troot[\"Xiangqi\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0dbef0b2ebcbe9f00606","// two players\r\nexport enum PLAYER {\r\n    Red,\r\n    Black\r\n};\r\nexport const opponent = function (self: PLAYER): PLAYER {\r\n    return self == PLAYER.Black ? PLAYER.Red : PLAYER.Black;\r\n}\r\n// 7 types of pieces\r\nexport enum PIECE {\r\n    King,\r\n    Guard,\r\n    Bishop,\r\n    Knight,\r\n    Rook,\r\n    Cannon,\r\n    Pawn\r\n};\r\n\r\nexport const character = function (type: PIECE, owner: PLAYER): string {\r\n    switch (type) {\r\n        case PIECE.King: return owner == PLAYER.Red ? \"帥\" : \"將\";\r\n        case PIECE.Guard: return owner === PLAYER.Red ? \"仕\" : \"士\";\r\n        case PIECE.Bishop: return owner == PLAYER.Red ? \"相\" : \"象\";\r\n        case PIECE.Knight: return owner == PLAYER.Red ? \"傌\" : \"馬\";\r\n        case PIECE.Rook: return owner === PLAYER.Red ? \"俥\" : \"車\";\r\n        case PIECE.Cannon: return owner == PLAYER.Red ? \"炮\" : \"砲\";\r\n        case PIECE.Pawn: return owner === PLAYER.Red ? \"兵\" : \"卒\";\r\n    }\r\n}\r\n\r\n// board size 9*10\r\nexport class SIZE {\r\n    public static readonly files = 9;\r\n    public static readonly ranks = 10;\r\n};\r\n\r\nexport const pos2idx = function (x: number, y: number): number {\r\n    return y * SIZE.files + x;\r\n}\r\n\r\nexport enum STATUS {\r\n    NotEnded,\r\n    Win,\r\n    Lost,\r\n    Draw,\r\n    FlyCheck,\r\n    Stalemate,\r\n    Impossbile\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common/define.ts","// 2d point\r\nexport default class Point {\r\n    // coordinate\r\n    x: number;\r\n    y: number;\r\n    constructor (x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    clone(): Point{\r\n      return new Point(this.x, this.y);\r\n    }\r\n    moveBy (dx:number, dy:number):void {\r\n        this.x += dx;\r\n        this.y += dy;\r\n    }\r\n    moveTo (x:number, y:number):void {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    equals(point: Point): boolean {\r\n        return this.x === point.x && this.y === point.y;\r\n    }\r\n    toString(): string{\r\n        return \"(\" + this.x + \", \" + this.y + \")\";\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Point.ts","import Point from './Point';\r\nimport Piece from './Piece';\r\nimport Move from './Move';\r\nimport BoardBase from './BoardBase';\r\n\r\nimport { PLAYER, PIECE, SIZE, STATUS } from './define';\r\n\r\n// test a move on given board (BoardBase)\r\nexport default class Rule {\r\n    // basic concepts\r\n    // board size: [0,9]x[0,10]\r\n    static isOutsideBoard(pos: Point): boolean {\r\n        return pos.x < 0 || pos.x >= SIZE.files || pos.y < 0 || pos.y >= SIZE.ranks;\r\n    }\r\n    // castle: [3,5]x[0,2] and [3,5]x[7,10]\r\n    static isInCastle(pos: Point, owner: PLAYER, board: BoardBase): boolean {\r\n        if (pos.x < 3 || pos.x > 5) return false;\r\n        if (owner === board.upSidePlayer) {\r\n            return pos.y <= 2;\r\n        } else {\r\n            return pos.y >= 7;\r\n        }\r\n    }\r\n    // two sides of the river: up [0,9]x[0,4], below [0,9]x[5,10]\r\n    static isCrossRiver(pos: Point, owner: PLAYER, board: BoardBase): boolean {\r\n        if (owner === board.upSidePlayer) { \r\n            return pos.y >= 5;\r\n        } else { \r\n            return pos.y <= 4;\r\n        }\r\n    }\r\n    // quick test before current player doing anything\r\n    static quickTestStatus(board: BoardBase): STATUS {\r\n        // two kings\r\n        let own: (Point | null) = null;\r\n        let opponent: (Point | null) = null;\r\n        let pos: Point = new Point();\r\n        // castle\r\n        for (let x of [3, 4, 5]) {\r\n            for (let y of [0, 1, 2, 7, 8, 9]) {\r\n                pos.moveTo(x, y);\r\n                let piece = board.at(pos);\r\n                if (piece == null) continue;   \r\n                if (piece.type === PIECE.King) {\r\n                    if (piece.isOwnedBy(board.currentMover)) own = pos.clone();\r\n                    else opponent = pos.clone();\r\n                }\r\n            }\r\n        }\r\n        if (own == null && opponent == null) {\r\n            return STATUS.Impossbile;\r\n        } else if (own == null) {\r\n            return STATUS.Lost;\r\n        } else if (opponent == null) {\r\n            return STATUS.Win;\r\n        }\r\n        // if two kings face each other\r\n        if (own.x === opponent.x) {\r\n            // count intervening pieces\r\n            let up = (board.currentMover == board.upSidePlayer ? own.y : opponent.y);\r\n            let blew = (board.currentMover == board.blewSidePlayer ? own.y : opponent.y);\r\n            let intervening = 0;\r\n            pos.moveTo(own.x, up + 1);\r\n            while (pos.y < blew) {\r\n                if (!board.empty(pos)) {\r\n                    ++intervening;\r\n                    break; // at least have one intervening pieces \r\n                }\r\n                pos.y += 1;\r\n            }\r\n            // with no intervening pieces, fly check\r\n            // win or lost depends on whose move causes fly check\r\n            if (intervening === 0) return STATUS.FlyCheck;\r\n        }\r\n         \r\n        // no possible moves, resign\r\n        // if (Rule.getPossibleMoves(board, true).length==0) return STATUS.Stalemate;\r\n        // it can be checked in search process, so the possible moves only need generate once.\r\n\r\n        if (board.moveHistory.length > 60) {\r\n            if (board.moveHistory.slice(-60).every((m: Move) => m.target == null))\r\n                return STATUS.Draw;\r\n        }\r\n\r\n        // TODO:: perpetual checking and chasing\r\n        // TODO:: draw\r\n\r\n        return STATUS.NotEnded;\r\n    }\r\n\r\n    // test legality of move on a given board\r\n    static isLegalMove(move: Move, board: BoardBase): boolean {\r\n        let from = move.from,\r\n            to = move.to;\r\n        // basic rules\r\n        if (Rule.isOutsideBoard(from) || Rule.isOutsideBoard(to)) return false;     \r\n        let piece = board.at(from);\r\n        if (piece == null) throw Error(\"Piece Not Found!\");\r\n        if (!piece.isOwnedBy(board.currentMover)) return false;\r\n        let target = board.at(to);\r\n        if (target != null) {\r\n            if (piece.isSameOwnerWith(target)) return false;\r\n        }\r\n        // special rules for each type of pieces\r\n        switch (piece.type) {\r\n            case PIECE.King:\r\n                return Rule.isLegalKingMove(move, piece.owner, board);\r\n            case PIECE.Guard:\r\n                return Rule.isLegalGuardMove(move, piece.owner, board);\r\n            case PIECE.Bishop:\r\n                return Rule.isLegalBishopMove(move, piece.owner, board);\r\n            case PIECE.Knight:\r\n                return Rule.isLegalKnightMove(move, board);\r\n            case PIECE.Rook:\r\n                return Rule.isLegalRookMove(move, board);\r\n            case PIECE.Cannon:\r\n                return Rule.isLegalCannonMove(move, board);\r\n            case PIECE.Pawn:\r\n                return Rule.isLegalPawnMove(move, piece.owner, board);\r\n            default:\r\n                throw new Error(\"Unkown Piece Type!\");\r\n        }\r\n    }\r\n    // special rules for each piece type\r\n    private static isLegalCannonMove(move: Move, board: BoardBase): boolean {\r\n        let from = move.from,\r\n            to = move.to;\r\n        let dx = to.x - from.x,\r\n            dy = to.y - from.y;\r\n        // on same file or rank\r\n        if (dx != 0 && dy != 0) return false;\r\n        let steps = Math.abs(dx) || Math.abs(dy);\r\n        let unitX = dx == 0 ? 0 : (dx > 0 ? 1 : -1),\r\n            unitY = dy == 0 ? 0 : (dy > 0 ? 1 : -1);\r\n        let pos = from.clone();\r\n        let intervening = 0;\r\n        for (let i = 1; i < steps; ++i) { // count intervening pieces\r\n            pos.moveBy(unitX, unitY);\r\n            if (!board.empty(pos)) ++intervening;\r\n            if (intervening > 1) return false; // more than one intervening pieces\r\n        }\r\n        // general move with no intervening pieces;\r\n        // attack move with exact one intervening piece\r\n        return board.empty(to) ? intervening === 0 : intervening === 1;\r\n    }\r\n    private static isLegalRookMove(move: Move, board: BoardBase): boolean {\r\n        let from = move.from,\r\n            to = move.to;\r\n        let dx = to.x - from.x,\r\n            dy = to.y - from.y;\r\n        // same file or rank \r\n        if (dx != 0 && dy != 0) return false;\r\n        let steps = Math.abs(dx) || Math.abs(dy);\r\n        let unitX = dx == 0 ? 0 : (dx > 0 ? 1 : -1),\r\n            unitY = dy == 0 ? 0 : (dy > 0 ? 1 : -1);\r\n        let pos = from.clone();\r\n        for (let i = 1; i < steps; ++i) {\r\n            pos.moveBy(unitX, unitY);\r\n            if (!board.empty(pos)) return false; // at least one intervening piece\r\n        }\r\n        return true; // with no intervening pieces\r\n    }\r\n    private static isLegalBishopMove(move: Move, owner: PLAYER, board: BoardBase): boolean {\r\n        let from = move.from,\r\n            to = move.to;\r\n        // should not cross the river\r\n        if (Rule.isCrossRiver(from, owner, board) || Rule.isCrossRiver(to, owner, board)) return false;\r\n        let dx = to.x - from.x,\r\n            dy = to.y - from.y;\r\n        if (Math.abs(dx) != 2 || Math.abs(dy) != 2) return false;\r\n        let pos = new Point(from.x + dx / 2, from.y + dy / 2);\r\n        return board.empty(pos);\r\n    }\r\n    private static isLegalKingMove(move: Move, owner: PLAYER, board: BoardBase): boolean {\r\n        let from = move.from,\r\n            to = move.to;\r\n        // king should stay in owner's castle\r\n        if (!Rule.isInCastle(from, owner, board) || !Rule.isInCastle(to, owner, board)) return false;\r\n        let dx = to.x - from.x,\r\n            dy = to.y - from.y;\r\n        if (Math.abs(dx) + Math.abs(dy) != 1) return false;\r\n        return true;\r\n    }\r\n    private static isLegalGuardMove(move: Move, owner: PLAYER, board: BoardBase): boolean {\r\n        let from = move.from,\r\n            to = move.to;\r\n        // guard should stay in owner's castle\r\n        if (!Rule.isInCastle(from, owner, board) || !Rule.isInCastle(to, owner, board)) return false;\r\n        let dx = to.x - from.x,\r\n            dy = to.y - from.y;\r\n        if (Math.abs(dx) != 1 || Math.abs(dy) != 1) return false;\r\n        return true;\r\n    }\r\n    private static isLegalKnightMove(move: Move, board: BoardBase): boolean {\r\n        let from = move.from,\r\n            to = move.to;\r\n        let dx = to.x - from.x,\r\n            dy = to.y - from.y;\r\n        if (dx == 0 || dy == 0 || Math.abs(dx) + Math.abs(dy) != 3) return false;\r\n        let pos = from.clone();\r\n        if (Math.abs(dx) == 2) pos.x += dx / 2;\r\n        else pos.y += dy / 2;\r\n        return board.empty(pos);\r\n    }\r\n    private static isLegalPawnMove(move: Move, owner: PLAYER, board: BoardBase): boolean {\r\n        let from = move.from,\r\n            to = move.to;\r\n        let dx = to.x - from.x,\r\n            dy = to.y - from.y;\r\n        // before crossing river, move only forward\r\n        if (!Rule.isCrossRiver(from, owner, board) && dx != 0) return false;\r\n        // move backward is not allowed\r\n        if (owner === board.upSidePlayer && dy < 0) return false;\r\n        else if (owner === board.blewSidePlayer && dy > 0) return false;\r\n        if (Math.abs(dx) + Math.abs(dy) != 1) return false;\r\n        return true;\r\n    }\r\n    //\r\n    static getPossibleMoves(board: BoardBase, currentMoverOnly: boolean = true): Array<Move> {\r\n        let allMoves: Array<Move> = [],\r\n            pos = new Point(0, 0);\r\n        for (let i = 0; i < SIZE.files; i++) {\r\n            for (let j = 0; j < SIZE.ranks; j++) {\r\n                pos.moveTo(i, j);    \r\n                let piece = board.at(pos);\r\n                if (piece == null) continue;\r\n                if (currentMoverOnly && piece.owner != board.currentMover) continue;\r\n                let moves: Array<Move> = [];\r\n                switch (piece.type) {\r\n                    case PIECE.King:\r\n                        moves = Rule.getKingPossibleMoves(piece, pos, board);\r\n                        break;\r\n                    case PIECE.Guard:\r\n                        moves = Rule.getGuardPossibleMoves(piece, pos, board);\r\n                        break;\r\n                    case PIECE.Bishop:\r\n                        moves = Rule.getBishopPossibleMoves(piece, pos, board);\r\n                        break;\r\n                    case PIECE.Knight:\r\n                        moves = Rule.getKnightPossibleMoves(piece, pos, board);\r\n                        break;\r\n                    case PIECE.Rook:\r\n                        moves = Rule.getRookPossibleMoves(piece, pos, board);\r\n                        break;\r\n                    case PIECE.Cannon:\r\n                        moves = Rule.getCannonPossibleMoves(piece, pos, board);\r\n                        break;\r\n                    case PIECE.Pawn:\r\n                        moves = Rule.getPawnPossibleMoves(piece, pos, board);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"Unkown Piece Type!\");\r\n                }\r\n                allMoves = allMoves.concat(moves);\r\n            }\r\n        }\r\n        if (currentMoverOnly) return allMoves.filter((move: Move) => move.protege == null);\r\n        return allMoves;\r\n    }\r\n    private static possibleMove(piece: Piece, from: Point, to: Point, relate: Piece | null): Move {\r\n        let move = new Move(from.clone(), to.clone()); // general move\r\n        if (relate != null) {\r\n            if (piece.isSameOwnerWith(relate)) move.guard(relate.type); // guard a piece\r\n            else move.attack(relate.type); // attack a piece\r\n        }\r\n        return move;\r\n    }\r\n    // NOTE:: for high performace, is should not use legality checker above.\r\n    private static getKingPossibleMoves(piece: Piece, pos: Point, board: BoardBase): Array<Move> {\r\n        let moves: Array<Move> = [];\r\n        let from = pos.clone();\r\n        // test 4 directions\r\n        [[-1, 0], [0, -1], [1, 0], [0, 1]].forEach((d) => {\r\n            pos.moveTo(from.x + d[0], from.y + d[1]);\r\n            if (!Rule.isOutsideBoard(pos)) {\r\n                if (Rule.isInCastle(pos, piece.owner, board)) {\r\n                    moves.push(Rule.possibleMove(piece, from, pos, board.at(pos)));\r\n                }\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n    private static getGuardPossibleMoves(piece: Piece, pos: Point, board: BoardBase): Array<Move> {\r\n        let moves: Array<Move> = [];\r\n        let from = pos.clone();\r\n        // test 4 directions\r\n        [[-1, 1], [1, -1], [1, 1], [-1, -1]].forEach((d) => {\r\n            pos.moveTo(from.x + d[0], from.y + d[1]);\r\n            if (!Rule.isOutsideBoard(pos)) {\r\n                if (Rule.isInCastle(pos, piece.owner, board)) {\r\n                    moves.push(Rule.possibleMove(piece, from, pos, board.at(pos)));\r\n                }\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n    private static getBishopPossibleMoves(piece: Piece, pos: Point, board: BoardBase): Array<Move> {\r\n        let moves: Array<Move> = [];\r\n        let from = pos.clone();\r\n        // test 4 directions\r\n        [[-2, 2], [2, -2], [2, 2], [-2, -2]].forEach((d) => {\r\n            pos.moveTo(from.x + d[0], from.y + d[1]);\r\n            if (!Rule.isOutsideBoard(pos)) {\r\n                if (!this.isCrossRiver(pos, piece.owner, board)) {\r\n                    // not blocking the elephant's eye\r\n                    if (board.empty(new Point(from.x + d[0] / 2, from.y + d[1] / 2))) {\r\n                        moves.push(Rule.possibleMove(piece, from, pos, board.at(pos)));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n    private static getKnightPossibleMoves(piece: Piece, pos: Point, board: BoardBase): Array<Move> {\r\n        let moves: Array<Move> = [];\r\n        let from = pos.clone();\r\n        // test 8 directions\r\n        [[1, -2], [2, -1], [2, 1], [1, 2], [-1, 2], [-2, 1], [-2, -1], [-1, -2]].forEach((d) => {\r\n            pos.moveTo(from.x + d[0], from.y + d[1]);\r\n            if (!Rule.isOutsideBoard(pos)) {\r\n                let hobble = d.map(x => x > 0 ? Math.floor(x / 2) : Math.ceil(x / 2));\r\n                // not hobbling the horse's leg\r\n                if (board.empty(new Point(from.x + hobble[0], from.y + hobble[1]))) {\r\n                    moves.push(Rule.possibleMove(piece, from, pos, board.at(pos)));\r\n                }\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n    private static getRookPossibleMoves(piece:Piece, pos: Point, board: BoardBase): Array<Move> {\r\n        let moves: Array<Move> = [];\r\n        let from = pos.clone();\r\n        // test 4 directions\r\n        [[-1, 0], [1, 0], [0, 1], [0, -1]].forEach((d) => {\r\n            let to = new Point(from.x + d[0], from.y + d[1]);\r\n            while (!Rule.isOutsideBoard(to) && board.empty(to)) {\r\n                moves.push(new Move(from.clone(), to.clone()));\r\n                to.moveBy(d[0], d[1]);\r\n            }\r\n            if (!Rule.isOutsideBoard(to)) { // attack or guard\r\n                moves.push(Rule.possibleMove(piece, from, to, board.at(to)));\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n    private static getPawnPossibleMoves(piece: Piece, pos: Point, board: BoardBase): Array<Move> {\r\n        let moves: Array<Move> = [];\r\n        let from = pos.clone();\r\n        // test 4 directions\r\n        [[-1, 0], [1, 0], [0, -1], [0, 1]].forEach((d) => {\r\n            // not backword\r\n            if ((piece.isOwnedBy(board.upSidePlayer) && d[1] != -1) ||\r\n                (piece.isOwnedBy(board.blewSidePlayer) && d[1] != 1)) {\r\n                // cross river or forward\r\n                if (Rule.isCrossRiver(from, piece.owner, board) || d[0] == 0) {\r\n                    let to = new Point(from.x + d[0], from.y + d[1]);\r\n                    if (!Rule.isOutsideBoard(to)) { // attack or guard\r\n                        moves.push(Rule.possibleMove(piece, from, to, board.at(to)));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n    private static getCannonPossibleMoves(piece:Piece, pos: Point, board: BoardBase): Array<Move> {\r\n        let moves: Array<Move> = [];\r\n        let from = pos.clone();\r\n        // test 4 directions\r\n        [[-1, 0], [1, 0], [0, 1], [0, -1]].forEach((d) => {\r\n            let to = new Point(from.x + d[0], from.y + d[1]);\r\n            while (!Rule.isOutsideBoard(to) && board.empty(to)) {\r\n                moves.push(new Move(from.clone(), to.clone()));\r\n                to.moveBy(d[0], d[1]);\r\n            }\r\n            if (!Rule.isOutsideBoard(to)) to.moveBy(d[0], d[1]);\r\n            while (!Rule.isOutsideBoard(to) && board.empty(to)) {\r\n                to.moveBy(d[0], d[1]);\r\n            }\r\n            // attack or guard\r\n            if (!Rule.isOutsideBoard(to)) {\r\n                moves.push(Rule.possibleMove(piece, from, to, board.at(to)));\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Rule.ts","import { PIECE } from './define'; \r\nimport Point from './Point';\r\n\r\n// move a piece\r\nexport default class Move{\r\n    from: Point;\r\n    to: Point;\r\n    target: PIECE | null;\r\n    protege: PIECE | null;\r\n    constructor(from: Point, to: Point) {\r\n        this.from = from.clone();\r\n        this.to = to.clone();\r\n        this.target = null;\r\n        this.protege = null;\r\n    }\r\n    attack(piece: PIECE | null): void {\r\n        this.target = piece;\r\n    }\r\n    guard(piece: PIECE | null): void {\r\n        this.protege = piece;\r\n    }\r\n    toString(): string {\r\n        return this.from.toString() + \"-->\" + this.to.toString();\r\n    }\r\n    clone(): Move {\r\n        let move = new Move(this.from, this.to);\r\n        move.attack(this.target);\r\n        move.guard(this.protege);\r\n        return move;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Move.ts","import { PLAYER, PIECE} from './define';\r\n\r\n// data of piece\r\nexport default class Piece {\r\n    owner: PLAYER;\r\n    type: PIECE;\r\n    constructor(owner: PLAYER, type: PIECE) {\r\n        this.type = type;\r\n        this.owner = owner;\r\n    }\r\n    equals(piece: Piece): boolean {\r\n        return this.type === piece.type && this.owner === piece.owner;\r\n    }\r\n    isOwnedBy(owner: PLAYER): boolean {\r\n        return this.owner === owner;\r\n    }\r\n    isSameOwnerWith(piece: Piece): boolean {\r\n        return this.owner === piece.owner;\r\n    }\r\n    clone(): Piece {\r\n        return new Piece(this.owner, this.type);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common/Piece.ts","import Point from '../../common/Point';\r\nimport Rect from '../../common/Rect';\r\n\r\nexport default class Widget {\r\n    protected parent: Widget | null;\r\n    protected canvas: HTMLCanvasElement;\r\n    protected children: Array<Widget>;\r\n    protected offsetRect: Rect;\r\n\r\n    constructor(parent: Widget | null, canvas: HTMLCanvasElement | null) {\r\n        this.parent = parent || null;\r\n        if (canvas == null) {\r\n            if (this.parent == null) throw Error(\"Widget must have canvas!\");\r\n            else this.canvas = this.parent.canvas;\r\n        } else {\r\n            this.canvas = canvas;\r\n        }\r\n        this.children = new Array();\r\n        this.offsetRect = new Rect(0, 0, 0, 0);\r\n        if (this.parent != null) this.parent.addChild(this);\r\n        this.eachChild(el=> el.onPaint());\r\n    }\r\n    //\r\n    addChild(child: Widget): void {\r\n        if (!this.hasChild(child)) {\r\n            this.children.push(child);\r\n        }\r\n        child.parent = this;\r\n    }\r\n    removeChild(child: Widget): Widget {\r\n        let i = this.children.indexOf(child);\r\n        return this.children.splice(i, 1)[0];\r\n    }\r\n    hasChild(child: Widget): boolean {\r\n        return this.children.indexOf(child) >= 0;\r\n    }\r\n    //\r\n    protected eachChild(callback: (el: Widget) => void, bottomUp = true): void {\r\n        if (!bottomUp) {\r\n            for (let i = this.children.length - 1; i >= 0; i--) {\r\n                if (callback(this.children[i])) break;\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.children.length; i++) {\r\n                if (callback(this.children[i])) break;\r\n            }\r\n        }\r\n    }\r\n    // move to front\r\n    public moveChildToTop(child: Widget): void {\r\n        child = this.removeChild(child);\r\n        if (child != null) this.children.push(child);\r\n    }\r\n\r\n    // Mouse event system has only one entry that is browser event being\r\n    // passed in at the bottom Widget named View.\r\n    // So, they are declared as protected and can not be called by user directly.\r\n    protected onMouseDown(point: Point): void {\r\n        this.eachChild(function(el) {\r\n            if (el.hitTest(point)) {\r\n                el.onMouseDown(point);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }, false);\r\n    }\r\n    protected onMouseUp(point: Point): void {\r\n        this.eachChild(function(el) {\r\n            if (el.hitTest(point)) {\r\n                el.onMouseUp(point);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }, false);\r\n    }\r\n    protected onMouseMove(point) {\r\n        this.eachChild(function(el) {\r\n            return el.onMouseMove(point);\r\n        }, false);\r\n    }\r\n    // \r\n    /* virtual */ protected onPaint(): void { };\r\n    // bottom-up invoke onPaint\r\n    public redraw(): void {\r\n        this.onPaint();\r\n        this.eachChild(function(el) {\r\n            el.redraw();\r\n        });\r\n    }\r\n    // redraw alias\r\n    public show(): void {\r\n        this.redraw();\r\n    }\r\n    //\r\n    protected hitTest(point: Point): boolean {\r\n        return this.offsetRect.isPointIn(point);\r\n    }\r\n    //\r\n    protected onDestroy(): void {\r\n        this.eachChild(function(el) {\r\n            el.onDestroy();\r\n        });\r\n        this.children = [];\r\n        if (this.parent != null) this.parent.removeChild(this);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/UI/common/Widget.ts","import Point from './Point';\r\n\r\n// Axis-Parallel Rectangle\r\nexport default class Rect {\r\n    // bound\r\n    left: number;\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n    constructor (left=0, top=0, right=0, bottom=0) {\r\n        this.left = left;\r\n        this.top = top\r\n        this.right = right;\r\n        this.bottom = bottom\r\n    }\r\n    get width (): number {\r\n        return this.right - this.left;\r\n    }\r\n    get height(): number {\r\n        return this.bottom - this.top;\r\n    }\r\n    moveBy (dx:number, dy:number): void {\r\n        this.left += dx;\r\n        this.right += dx;\r\n        this.top += dy;\r\n        this.bottom += dy;\r\n    }\r\n    moveTo(x: number, y: number): void {\r\n        this.right = x + this.width;\r\n        this.bottom = y + this.height;\r\n        this.left = x;\r\n        this.top = y;\r\n    }\r\n    isPointIn(point: Point): boolean {\r\n        return this.left <= point.x && this.right > point.x && this.top <= point.y && this.bottom > point.y;\r\n    }\r\n    isOverlap(rc: Rect): boolean {\r\n        return !(this.left >= rc.right || this.right <= rc.left || this.top >= rc.bottom || this.bottom <= rc.top);\r\n    }\r\n    equals(rc: Rect): boolean {\r\n        return this.left == rc.left && this.top == rc.top && this.right == rc.right && this.bottom == rc.bottom;\r\n    }\r\n    toString ():string {\r\n        return \"[\" + this.left + \", \" + this.top + \", \" + this.right + \", \" + this.bottom + \"]\";\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Rect.ts","import Manager from './Manager';\r\n\r\nexport default class Xiangqi {\r\n    private canvas: HTMLCanvasElement;\r\n    private manager: Manager;\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        this.canvas = canvas;\r\n        this.manager = new Manager(canvas);\r\n        this.manager.bind();\r\n    }\r\n    public newGame() {\r\n        if (this.manager != null) this.manager.destory();\r\n        this.manager = new Manager(this.canvas);\r\n        this.manager.bind();\r\n    }\r\n    public undoMove() {\r\n        this.manager.userUndo();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { PLAYER, PIECE, SIZE, STATUS } from './common/define';\r\nimport Point from './common/Point';\r\nimport Move from './common/Move';\r\nimport Board from './common/Board';\r\nimport Piece from './common/Piece';\r\nimport Rule from './common/Rule';\r\nimport ManagerBase from './ManagerBase';\r\nimport BoardUI from './UI/Board';\r\nimport PieceUI from './UI/Piece';\r\nimport SearchEngine from './AI/SearchEngine';\r\nimport { MESSAGE } from './Message';\r\nimport Setting from './Setting';\r\n\r\nimport MiniMax from './AI/SearchEngines/MiniMax';\r\nimport NegaMax from './AI/SearchEngines/NegaMax';\r\nimport AlphaBetaMiniMax from './AI/SearchEngines/AlphaBetaMiniMax';\r\nimport Aspiration from './AI/SearchEngines/Aspiration';\r\nimport IterativeDeepeningNegaScout_TT_HH from './AI/SearchEngines/IterativeDeepeningNegaScout_TT_HH';\r\nimport IterativeDeepeningAlphaBeta from './AI/SearchEngines/IterativeDeepeningAlphaBeta';\r\nimport IterativeDeepeningPVS from './AI/SearchEngines/IterativeDeepeningPVS';\r\nimport PrincipalVariationSearch from './AI/SearchEngines/PVS';\r\nimport NegaScout_TT_HH from './AI/SearchEngines/NegaScout_TT_HH';\r\nimport MTDf from './AI/SearchEngines/MTDf';\r\n\r\nimport Evaluator from './AI/Evaluator';\r\nimport SimpleEvaluator from './AI/Evaluators/SimpleEvaluator';\r\nimport MoveGenerator from './AI/MoveGenerator';\r\nimport SimpleMoveGenerator from './AI/MoveGenerators/SimpleMoveGenerator';\r\nimport Notation from './common/Notation';\r\n\r\nexport default class Manager extends ManagerBase {\r\n    // manage communication among these 3 parts\r\n    private board: Board;\r\n    private UI: BoardUI;\r\n    private AI: SearchEngine;\r\n\r\n    private gameOver: boolean = false;\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        super();\r\n        // data model\r\n        this.board = new Board();\r\n        Manager.initialize(this.board);\r\n        // UI\r\n        this.UI = new BoardUI(canvas, Setting.layout, Setting.style.board);\r\n        this.UI.set(this.board, Setting.style.piece);\r\n        this.UI.show();\r\n\r\n        // prepare AI\r\n        this.AI = new IterativeDeepeningNegaScout_TT_HH();\r\n        // this.AI.setSearchDepth(3);\r\n        this.AI.setMoveGenerator(new SimpleMoveGenerator());\r\n        this.AI.setEvaluator(new SimpleEvaluator());\r\n    }\r\n    public bind() {\r\n        this.UI.setMessager(this);\r\n    }\r\n    public doMove(move: Move): void {\r\n        if (move.from.equals(move.to)) return;\r\n        console.log(Notation.notatioin(move, this.board));\r\n        this.board.doMove(move);\r\n        this.judge();\r\n        if (!this.gameOver && this.UI.isCompuer()) {\r\n            this.search(); // start AI search\r\n        }\r\n    }\r\n    private undoMove(): void {\r\n        console.log(\"undo\");\r\n        this.board.undoMove();\r\n        this.UI.undo();\r\n    }\r\n    // when user click undo botton\r\n    public userUndo(): void {\r\n        if (this.gameOver && this.UI.isCompuer()) { // case 1: computer resign\r\n            this.undoMove();\r\n            this.unlock();\r\n        } else { // case 2: ended after computer move\r\n            if (this.UI.isCompuer()) return;\r\n            if (this.gameOver) this.unlock();\r\n            this.undoMove(); // undo computer move\r\n            let manager = this;\r\n            let timer = setInterval(function () {\r\n                if (!manager.UI.isThreadCompleted) return;\r\n                clearInterval(timer);\r\n                manager.undoMove(); // undo user move\r\n            }, 100);\r\n        }\r\n    }\r\n    public destory() {\r\n        this.UI.destory();\r\n    }\r\n    public isLegalMove(move: Move): boolean {\r\n        return Rule.isLegalMove(move, this.board);\r\n    }\r\n    public isValidPosition(pos: Point): boolean {\r\n        return !Rule.isOutsideBoard(pos);\r\n    }\r\n    private judge() { // judgement\r\n        let status = this.board.quickTestStatus();\r\n        switch (status) {\r\n            case STATUS.Win:\r\n                if (this.UI.isCompuer()) {\r\n                    this.showMessage(MESSAGE.LOST);\r\n                } else {\r\n                    this.showMessage(MESSAGE.WIN);\r\n                }\r\n                break;\r\n            case STATUS.Lost:\r\n                if (this.UI.isCompuer()) {\r\n                    this.showMessage(MESSAGE.WIN);\r\n                } else {\r\n                    this.showMessage(MESSAGE.LOST);\r\n                }\r\n                break;\r\n            case STATUS.Draw:\r\n                this.showMessage(MESSAGE.DRAW);\r\n                break;\r\n        }\r\n        if (status != STATUS.NotEnded) this.lock();\r\n    }\r\n    private search() {\r\n        let manager = this;\r\n        // wait for UI thread complete\r\n        let timer = setInterval(function () {\r\n            if (!manager.UI.isThreadCompleted) return;\r\n            clearInterval(timer);\r\n            let best = manager.AI.searchAGoodMove(manager.board, 10000);\r\n            if (best == null || manager.AI.STATUS != STATUS.NotEnded) {\r\n                manager.lock();\r\n                if (manager.AI.STATUS == STATUS.Win) {\r\n                    manager.showMessage(MESSAGE.LOST); // user lost\r\n                } else {\r\n                    manager.showMessage(MESSAGE.RESIGN); // user win\r\n                }\r\n                return;\r\n            }\r\n            manager.UI.update(best);\r\n        }, 100);\r\n    }\r\n    private lock() {\r\n        this.gameOver = true;\r\n        this.UI.lock = true;\r\n    }\r\n    private unlock() {\r\n        this.gameOver = false;\r\n        this.UI.lock = false;\r\n    }\r\n    private showMessage(msg: string): void{\r\n        let manager = this;\r\n        let timer = setInterval(function () {\r\n            if (!manager.UI.isThreadCompleted) return;\r\n            clearInterval(timer);\r\n            alert(msg);\r\n        }, 100);\r\n    }\r\n    private static initialize(board: Board):void {\r\n        // init board data model\r\n        board.set(new Point(4, 0), new Piece(board.upSidePlayer, PIECE.King));\r\n        board.set(new Point(3, 0), new Piece(board.upSidePlayer, PIECE.Guard));\r\n        board.set(new Point(5, 0), new Piece(board.upSidePlayer, PIECE.Guard));\r\n        board.set(new Point(2, 0), new Piece(board.upSidePlayer, PIECE.Bishop));\r\n        board.set(new Point(6, 0), new Piece(board.upSidePlayer, PIECE.Bishop));\r\n        board.set(new Point(1, 0), new Piece(board.upSidePlayer, PIECE.Knight));\r\n        board.set(new Point(7, 0), new Piece(board.upSidePlayer, PIECE.Knight));\r\n        board.set(new Point(0, 0), new Piece(board.upSidePlayer, PIECE.Rook));\r\n        board.set(new Point(8, 0), new Piece(board.upSidePlayer, PIECE.Rook));\r\n        board.set(new Point(1, 2), new Piece(board.upSidePlayer, PIECE.Cannon));\r\n        board.set(new Point(7, 2), new Piece(board.upSidePlayer, PIECE.Cannon));\r\n        board.set(new Point(0, 3), new Piece(board.upSidePlayer, PIECE.Pawn));\r\n        board.set(new Point(2, 3), new Piece(board.upSidePlayer, PIECE.Pawn));\r\n        board.set(new Point(4, 3), new Piece(board.upSidePlayer, PIECE.Pawn));\r\n        board.set(new Point(6, 3), new Piece(board.upSidePlayer, PIECE.Pawn));\r\n        board.set(new Point(8, 3), new Piece(board.upSidePlayer, PIECE.Pawn));\r\n\r\n        board.set(new Point(4, 9), new Piece(board.blewSidePlayer, PIECE.King));\r\n        board.set(new Point(3, 9), new Piece(board.blewSidePlayer, PIECE.Guard));\r\n        board.set(new Point(5, 9), new Piece(board.blewSidePlayer, PIECE.Guard));\r\n        board.set(new Point(2, 9), new Piece(board.blewSidePlayer, PIECE.Bishop));\r\n        board.set(new Point(6, 9), new Piece(board.blewSidePlayer, PIECE.Bishop));\r\n        board.set(new Point(1, 9), new Piece(board.blewSidePlayer, PIECE.Knight));\r\n        board.set(new Point(7, 9), new Piece(board.blewSidePlayer, PIECE.Knight));\r\n        board.set(new Point(0, 9), new Piece(board.blewSidePlayer, PIECE.Rook));\r\n        board.set(new Point(8, 9), new Piece(board.blewSidePlayer, PIECE.Rook));\r\n        board.set(new Point(1, 7), new Piece(board.blewSidePlayer, PIECE.Cannon));\r\n        board.set(new Point(7, 7), new Piece(board.blewSidePlayer, PIECE.Cannon));\r\n        board.set(new Point(0, 6), new Piece(board.blewSidePlayer, PIECE.Pawn));\r\n        board.set(new Point(2, 6), new Piece(board.blewSidePlayer, PIECE.Pawn));\r\n        board.set(new Point(4, 6), new Piece(board.blewSidePlayer, PIECE.Pawn));\r\n        board.set(new Point(6, 6), new Piece(board.blewSidePlayer, PIECE.Pawn));\r\n        board.set(new Point(8, 6), new Piece(board.blewSidePlayer, PIECE.Pawn));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Manager.ts","import Point from './Point';\r\nimport Piece from './Piece';\r\nimport Move from './Move';\r\nimport BoardBase from './BoardBase';\r\nimport Rule from './Rule';\r\nimport { SIZE, PLAYER, STATUS, pos2idx } from './define';\r\n\r\n// abstract logical game board\r\nexport default class Board extends BoardBase{\r\n    // update\r\n    doMove(move: Move): void {\r\n        if (move.from.equals(move.to)) return;\r\n        if (!Rule.isLegalMove(move, this)) { \r\n            console.log(this.toString());\r\n            console.log(move.toString());\r\n            throw new Error(\"Invalid Move!\");\r\n        }\r\n        let from = move.from,\r\n            to = move.to;\r\n        let target = this.at(to);\r\n        if (target != null) move.attack(target.type);\r\n        this.set(to, this.at(from));\r\n        this.set(from, null);\r\n        this.history.push(move);\r\n        this.switchMover();\r\n    }\r\n    undoMove(): void {\r\n        if (this.history.length == 0) {\r\n            throw new Error(\"No previus move!!!\");\r\n        }\r\n        let move = this.history.pop();\r\n        if (typeof move != \"undefined\") {\r\n            let from = move.from,\r\n                to = move.to;\r\n            this.set(from, this.at(to));\r\n            if (move.target != null) {\r\n                this.set(to, new Piece(this.currentMover, move.target));\r\n            } else {\r\n                this.set(to, null);\r\n            }\r\n            this.switchMover();\r\n        }\r\n    }\r\n    //\r\n    quickTestStatus(): STATUS {\r\n        return Rule.quickTestStatus(this);\r\n    }\r\n    //\r\n    public clone(): Board {\r\n        let board = new Board();\r\n        board.upSide = this.upSide;\r\n        board.mover = this.mover;\r\n        for (let x = 0; x < SIZE.files; ++x) {\r\n            for (let y = 0; y < SIZE.ranks; ++y) {\r\n                let idx = pos2idx(x, y);\r\n                let piece = this.boardMap[idx];\r\n                if (piece != null) {\r\n                    board.boardMap[idx] = piece.clone();\r\n                }\r\n            }\r\n        }\r\n        return board;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Board.ts","import { PIECE, PLAYER, SIZE, opponent, pos2idx, character } from './define';\r\nimport Point from './Point';\r\nimport Piece from './Piece';\r\nimport Move from './Move';\r\n\r\n// basic board with IO\r\nexport default abstract class BoardBase {\r\n    protected boardMap: Array<Piece | null>;\r\n\r\n    protected upSide: PLAYER;\r\n\r\n    protected mover: PLAYER;\r\n\r\n    protected history: Array<Move>;\r\n\r\n    constructor() {\r\n        this.boardMap = Array.apply(null, Array(SIZE.files * SIZE.ranks));\r\n\r\n        this.upSide = PLAYER.Black;\r\n\r\n        this.mover = PLAYER.Red;\r\n\r\n        this.history = [];\r\n    }\r\n    at(pos: Point): Piece | null {\r\n        // this.legalityChecker(pos);\r\n        return this.boardMap[pos2idx(pos.x, pos.y)];\r\n    }\r\n    set(pos: Point, piece: Piece | null): void {\r\n        // this.legalityChecker(pos);\r\n        this.boardMap[pos2idx(pos.x, pos.y)] = piece;\r\n    }\r\n    empty(pos: Point): boolean {\r\n        // this.legalityChecker(pos);\r\n        return this.boardMap[pos2idx(pos.x, pos.y)] == null;\r\n    }\r\n    // For robustness, it's necessary, although the arguments is not from users.\r\n    // But for perfomance, it may be omitted, and the legality depends on developers.\r\n    private legalityChecker(pos: Point):void {\r\n        if (pos.x < 0 || pos.x > SIZE.files || pos.y < 0 || pos.y > SIZE.ranks)\r\n            throw RangeError(\"Out of board!\");\r\n        if (Math.round(pos.x) !== pos.x || Math.round(pos.y) !== pos.y)\r\n            throw Error(\"Must be integer!\");\r\n    }\r\n    get currentMover(): PLAYER {\r\n        return this.mover;\r\n    }\r\n    switchMover(): void {\r\n        this.mover = opponent(this.mover);\r\n    }\r\n    get upSidePlayer(): PLAYER {\r\n        return this.upSide;\r\n    }\r\n    get blewSidePlayer(): PLAYER {\r\n        return opponent(this.upSide);\r\n    }\r\n    get moveHistory(): Array<Move> {\r\n        return this.history;\r\n    }\r\n    // exchange two players\r\n    switchSide(): void {\r\n        this.upSide = opponent(this.upSide);\r\n    }\r\n    // only swap the side of board\r\n    rotate() {\r\n        this.upSide = opponent(this.upSide);\r\n        let halfBoard = SIZE.ranks * SIZE.files / 2;\r\n        this.boardMap = this.boardMap.slice(halfBoard).concat(this.boardMap.slice(0, halfBoard));\r\n    }\r\n    abstract clone();\r\n    toString() {\r\n        let str = \"┌\" + Array(SIZE.files).join(\"──\") +\"┐\\n\";\r\n        for (let y = 0; y < SIZE.ranks; ++y) {\r\n            str += \"│\";\r\n            for (let x = 0; x < SIZE.files; ++x) {\r\n                let piece = this.boardMap[pos2idx(x, y)]; \r\n                if (piece == null) str += \"\\u3000\"; // full width space\r\n                else str += character(piece.type, piece.owner);\r\n            }\r\n            str += \"│\\n\";\r\n        }\r\n        str += \"└\" + Array(SIZE.files).join(\"──\") + \"┘\\n\";\r\n        str += this.currentMover === PLAYER.Red ? \"红方行棋\" : \"黑方行棋\";\r\n        return str;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/BoardBase.ts","import Move from './common/Move';\r\nimport Point from './common/Point';\r\nimport Piece from './UI/Piece';\r\n\r\nexport default abstract class ManagerBase {\r\n    // UI changed --> logical board change\r\n    public abstract doMove(move: Move): void;\r\n\r\n    // UI action <-- ask logical board\r\n    public abstract isLegalMove(move: Move): boolean;\r\n    public abstract isValidPosition(pos: Point): boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ManagerBase.ts","import View from './common/View';\r\nimport Point from '../common/Point';\r\nimport Move from '../common/Move';\r\nimport { PLAYER, PIECE, SIZE, opponent, character } from '../common/define';\r\nimport ManagerBase from '../ManagerBase';\r\nimport Layout from './setting/Layout';\r\nimport BoardStyle from './setting/BoardStyle';\r\nimport PieceStyle from './setting/PieceStyle';\r\nimport BoardBase from './BoardBase';\r\nimport Piece from './Piece';\r\nimport Record from './Record';\r\nimport Notation from '../common/Notation';\r\n\r\nimport PieceData from '../common/Piece';\r\nimport BoardData from '../common/Board';\r\n\r\nexport default class Board extends BoardBase {\r\n    private layout: Layout;\r\n    private style: BoardStyle;\r\n\r\n    protected children: Array<Piece> = [];\r\n\r\n    constructor(canvas: HTMLCanvasElement, layout: Layout, style: BoardStyle) {\r\n        super(canvas);\r\n\r\n        this.offsetRect.left = 0;\r\n        this.offsetRect.top = 0;\r\n        this.offsetRect.right = 460;\r\n        this.offsetRect.bottom = 510;\r\n\r\n        this.layout = layout;\r\n        this.style = style;\r\n    }\r\n    // find Piece widget on Board\r\n    private findChess(pos: Point): Piece | null {\r\n        if (!this.messager!.isValidPosition(pos)) return null;\r\n        for (let child of this.children) {\r\n            if (child.isAt(pos)) return child;\r\n        }\r\n        return null;\r\n    }\r\n    public undo(): void {\r\n        let record = this.history.pop();\r\n        if (typeof record !== \"undefined\") {\r\n            let piece = this.findChess(record.to);\r\n            if (piece == null) throw Error(\"Piece Not Found!\");\r\n            piece.move(record.from);\r\n            // restore killed piece\r\n            if (record.piece != null) {\r\n                this.addChild(record.piece);\r\n                record.piece.move(record.to); // just move inplace and trigger redraw\r\n            }\r\n            this.switchMover();\r\n        }\r\n    }\r\n    // flow: manager (AI, search finished) -> board -> piece & manager\r\n    // flow: piece (user, mouse up) -> board -> piece & manager\r\n    update(move: Move): void {\r\n        let piece = this.findChess(move.from);\r\n        let killed = this.findChess(move.to);\r\n        this.history.push(new Record(move, killed));\r\n        this.removeChess(move.to); // update board\r\n        if (piece == null) throw Error(\"Piece Not Found!\");\r\n        piece.move(move.to); // update piece position\r\n        this.switchMover();\r\n        this.messager!.doMove(move); // update board model\r\n    }\r\n    private removeChess(pos: Point): void {\r\n        let piece = this.findChess(pos);\r\n        if (piece != null) this.removeChild(piece);\r\n    }\r\n    onPaint() { \r\n        let ctx = this.canvas.getContext('2d');\r\n        if (ctx == null) throw Error(\"Context Type Undefined!\"); \r\n        let style = this.style;\r\n        let layout = this.layout;\r\n        // background\r\n        ctx.fillStyle = style.background;\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, layout.offsetWidth, layout.offsetHeight);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n        // lines\r\n        let p = layout.padding,\r\n            s = layout.cell,\r\n            w = layout.width,\r\n            h = layout.height;\r\n        ctx.strokeStyle = style.border;\r\n        ctx.lineWidth = 2;\r\n        ctx.beginPath();\r\n        // 10 ranks\r\n        for (let i = 0; i < 10; i++) {\r\n            ctx.moveTo(p, s * i + p);\r\n            ctx.lineTo(w + p, s * i + p);\r\n        }\r\n        // left-most, right-most ranks\r\n        ctx.moveTo(p, p);\r\n        ctx.lineTo(p, h + p);\r\n        ctx.moveTo(w + p, p);\r\n        ctx.lineTo(w + p, h + p);\r\n        // 7 ranks cross river\r\n        for (let i = 1; i < 8; i++) {\r\n            ctx.moveTo(s * i + p, p);\r\n            ctx.lineTo(s * i + p, s * 4 + p);\r\n            ctx.moveTo(s * i + p, s * 5 + p);\r\n            ctx.lineTo(s * i + p, h + p);\r\n        }\r\n        // castle\r\n        ctx.moveTo(s * 3 + p, p);\r\n        ctx.lineTo(s * 5 + p, s * 2 + p);\r\n        ctx.moveTo(s * 5 + p, 0 + p);\r\n        ctx.lineTo(s * 3 + p, s * 2 + p);\r\n        ctx.moveTo(s * 3 + p, s * 7 + p);\r\n        ctx.lineTo(s * 5 + p, s * 9 + p);\r\n        ctx.moveTo(s * 5 + p, s * 7 + p);\r\n        ctx.lineTo(s * 3 + p, s * 9 + p);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n        // river\r\n        ctx.save();\r\n        ctx.rotate(-Math.PI / 2);\r\n        ctx.font = style.font;\r\n        ctx.fillStyle = style.border;\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.fillText(\"楚\", -(p + s * 4.5), (p + s * 1.5));\r\n        ctx.fillText(\"河\", -(p + s * 4.5), (p + s * 2.5));\r\n        ctx.rotate(Math.PI);\r\n        ctx.fillText(\"漢\", (p + s * 4.5), -(p + s * 6.5));\r\n        ctx.fillText(\"界\", (p + s * 4.5), -(p + s * 5.5));\r\n        ctx.restore();\r\n    }\r\n    set(board: BoardData, style: (owner:PLAYER)=>PieceStyle): void {\r\n        let layout = this.layout;\r\n        for (let x = 0; x < SIZE.files; ++x) {\r\n            for (let y = 0; y < SIZE.ranks; ++y) {\r\n                let pos = new Point(x, y);\r\n                let piece = board.at(pos);\r\n                if (piece != null) {\r\n                    new Piece(this, character(piece.type, piece.owner), piece.owner, piece.type, pos, layout, style(piece.owner));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    destory() {\r\n        this.onDestroy();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/UI/Board.ts","import View from './common/View';\r\nimport Point from '../common/Point';\r\nimport Move from '../common/Move';\r\nimport { PLAYER, PIECE, opponent } from '../common/define';\r\nimport ManagerBase from '../ManagerBase';\r\nimport Layout from './setting/Layout';\r\nimport BoardStyle from './setting/BoardStyle';\r\nimport Record from './Record';\r\n\r\nexport default abstract class BoardBase extends View {\r\n    protected human: PLAYER;\r\n    protected computer: PLAYER;\r\n\r\n    // JavaScript is single-threaded\r\n    // AI computation should not block UI thread\r\n    // Mouse event, paint event, animation event should block each other\r\n    public isThreadCompleted: boolean; // mutex\r\n\r\n    public lock: boolean; // lock board when game over, block all mouse event\r\n\r\n    protected mover: PLAYER;\r\n\r\n    protected messager: ManagerBase | null = null;\r\n\r\n    protected history: Array<Record>;\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        super(canvas);\r\n\r\n        this.human = PLAYER.Red;\r\n        this.computer = PLAYER.Black;\r\n\r\n        this.mover = PLAYER.Red;\r\n\r\n        this.isThreadCompleted = true;\r\n        this.lock = false;\r\n\r\n        this.history = [];\r\n    }\r\n    get currentMover(): PLAYER {\r\n        return this.mover;\r\n    }\r\n    public isLegalMove(from: Point, to: Point): boolean {\r\n        return this.messager!.isLegalMove(new Move(from.clone(), to.clone()));\r\n    }\r\n    public isCompuer(): boolean {\r\n        return this.mover === this.computer;\r\n    }\r\n    protected switchMover() {\r\n        this.mover = opponent(this.mover);\r\n    }\r\n    public setMessager(messager: ManagerBase) {\r\n        this.messager = messager;\r\n    }\r\n    // flow: manager (AI, search finished) -> board -> piece & manager\r\n    // flow: piece (user, mouse up) -> board -> piece & manager\r\n    abstract update(move: Move): void;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/UI/BoardBase.ts","import Point from '../../common/Point';\r\nimport Widget from './Widget';\r\n\r\ndeclare var document: Document;\r\n\r\nexport default class View extends Widget {\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        super(null, canvas);\r\n        document.addEventListener(\"mousedown\",  this.globalOnMouseDown );\r\n        document.addEventListener(\"mousemove\",  this.globalOnMouseMove );\r\n        document.addEventListener(\"mouseup\",  this.globalOnMouseUp );\r\n    }\r\n    // mouse coordinate on canvas\r\n    coordinate(e: MouseEvent, dom: HTMLCanvasElement): Point {\r\n        let x = e.pageX - dom.offsetLeft, y = e.pageY - dom.offsetTop;\r\n        return new Point(x, y);\r\n    }\r\n    // trigger mouse event on Widgets, top-down\r\n    // pass browser event into Widgets system\r\n    private globalOnMouseDown = (e: MouseEvent) => {\r\n        super.onMouseDown(this.coordinate(e, this.canvas));\r\n    }\r\n    private globalOnMouseMove = (e: MouseEvent) => {\r\n        super.onMouseMove(this.coordinate(e, this.canvas));\r\n    }\r\n    private globalOnMouseUp = (e: MouseEvent) => {\r\n        super.onMouseUp(this.coordinate(e, this.canvas));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/UI/common/View.ts","import Point from '../common/Point';\r\nimport Move from '../common/Move';\r\nimport Rect from '../common/Rect';\r\nimport Widget from './common/Widget';\r\nimport Layout from './setting/Layout';\r\nimport PieceStyle from './setting/PieceStyle';\r\nimport { PLAYER, PIECE } from '../common/define';\r\nimport Rule from '../common/Rule';\r\nimport BoardBase from './BoardBase';\r\n\r\nexport default class Piece extends Widget {\r\n    private name: string; // a Chinese character\r\n    private owner: PLAYER; // \r\n    private type: PIECE;\r\n    private position: Point;\r\n\r\n    private layout: Layout; // board layout, for putting chess in proper position\r\n    private style: PieceStyle;\r\n\r\n    private isDragging: boolean;\r\n\r\n    private targetIndicator: Point | null; // indicator\r\n    private targetIndicatorAlpha: number;\r\n\r\n    protected parent!: BoardBase;\r\n\r\n    constructor(parent: Widget, name: string, owner: PLAYER, type: PIECE, position: Point, layout: Layout, style: PieceStyle) {\r\n        super(parent, null);\r\n        this.name = name;\r\n        this.type = type;\r\n        this.owner = owner;\r\n        this.position = position;\r\n\r\n        this.isDragging = false;\r\n\r\n        this.targetIndicator = null;\r\n        this.targetIndicatorAlpha = 0.2;\r\n\r\n        this.layout = layout;\r\n        this.style = style;\r\n        let left = layout.padding + layout.cell * this.position.x - layout.cell / 2;\r\n        let top = layout.padding + layout.cell * this.position.y - layout.cell / 2;\r\n        this.offsetRect = new Rect( left, top, left + layout.cell, top + layout.cell);\r\n    }\r\n    protected onPaint() {\r\n        let layout = this.layout;\r\n        let style = this.style;\r\n        let ctx = this.canvas.getContext('2d');\r\n        if (ctx == null) throw Error(\"Context type undefined!\");\r\n        ctx.fillStyle = style.background;\r\n        ctx.strokeStyle = style.border;\r\n        ctx.font = style.font;\r\n        // center\r\n        let x = this.offsetRect.left + layout.cell / 2,\r\n            y = this.offsetRect.top + layout.cell / 2;\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\";\r\n        // shadow\r\n        if (this.isDragging) ctx.arc(x + 2, y + 4, layout.chessRadius + 1, 0, 360);\r\n        else ctx.arc(x + 1, y + 2, layout.chessRadius + 1, 0, 360);\r\n        ctx.fill();\r\n        ctx.fillStyle = style.background;\r\n        ctx.closePath();\r\n        // indicator\r\n        if (this.targetIndicator != null && this.targetIndicatorAlpha > 0) {\r\n            ctx.beginPath();\r\n            ctx.fillStyle = \"rgba(0, 128, 0, \" + this.targetIndicatorAlpha + \")\";\r\n            ctx.arc(layout.padding + this.targetIndicator.x * layout.cell, layout.padding + this.targetIndicator.y * layout.cell, layout.cell / 2, 0, 360);\r\n            ctx.fill();\r\n            ctx.fillStyle = style.background;\r\n            ctx.closePath();\r\n        }\r\n        // piece body\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, layout.chessRadius, 0, 360);\r\n        ctx.fill();\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.font = style.font;\r\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.5)\";\r\n        ctx.fillText(this.name, x + 1, y - layout.fontSize / 16 + 1);\r\n        ctx.fillStyle = style.fontColor;\r\n        ctx.fillText(this.name, x, y - layout.fontSize / 16);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n    onMouseDown() {\r\n        if (this.parent.lock) return;\r\n        if (!this.parent.isThreadCompleted) return; // blocked by other action\r\n        if (this.parent.currentMover == this.owner) {\r\n            this.isDragging = true; // block other action\r\n            this.parent.moveChildToTop(this); // move piece to front\r\n            this.parent.redraw(); // repaint\r\n        }\r\n    }\r\n    onMouseMove(point) {\r\n        let layout = this.layout;\r\n        if (this.isDragging) {\r\n            if (point.x <= 0 || point.x >= layout.offsetWidth || point.y <= 0 || point.y >= layout.offsetHeight) {\r\n                this.isDragging = false; // if outside board, stop it\r\n                this.moveTo(this.position); // cancle current move\r\n                this.parent.redraw();\r\n                return;\r\n            }\r\n            // left top\r\n            let x = point.x - layout.cell / 2,\r\n                y = point.y - layout.cell / 2;\r\n            // move\r\n            this.offsetRect.moveTo(x, y);\r\n            // position on board (file, rank)\r\n            let pos = this.point2chessPos(x, y);\r\n            // test rules\r\n            if (this.parent.isLegalMove(this.position, pos)) this.targetIndicator = pos;\r\n            else this.targetIndicator = null;\r\n            // repaint\r\n            this.parent.redraw();\r\n        }\r\n    }\r\n    onMouseUp() {\r\n        if (this.isDragging) {\r\n            this.isDragging = false;\r\n            if (this.targetIndicator === null) {\r\n                this.moveTo(this.position); // cancle current move\r\n                this.parent.redraw();\r\n                return;\r\n            }\r\n            let pos = this.targetIndicator;\r\n            this.parent.update(new Move(this.position, pos)); // notice Board to update\r\n        }\r\n    }\r\n    public move(pos: Point): void {\r\n        this.targetIndicator = pos;\r\n        this.moveTo(pos);\r\n    }\r\n    public isAt(pos: Point): boolean {\r\n        return pos!=null && this.position.equals(pos);\r\n    }\r\n    // canvas coordinate to board (file,rank)\r\n    private point2chessPos(x: number, y: number): Point {\r\n        let layout = this.layout;\r\n        return new Point(Math.ceil((x - layout.padding) / layout.cell), Math.ceil((y - layout.padding) / layout.cell));\r\n    }\r\n    private chessPos2point(x: number, y: number): Point {\r\n        let layout = this.layout;\r\n        return new Point(x * layout.cell + layout.padding, y * layout.cell + layout.padding);\r\n    }\r\n    // move a piece\r\n    private moveTo(pos: Point): void {\r\n        this.parent.isThreadCompleted = false; // lock mutex\r\n        let layout=this.layout;\r\n        // target\r\n        let left = layout.padding + layout.cell * pos.x - layout.cell / 2,\r\n            top = layout.padding + layout.cell * pos.y - layout.cell / 2;\r\n        // offset\r\n        let dx = left - this.offsetRect.left,\r\n            dy = top - this.offsetRect.top;\r\n        // animation\r\n        let t = 0, // time counter, unit: frame\r\n            c = 15, //15 frame, 1 frame = 40ms\r\n            piece = this;\r\n        let timer = setInterval(()=> {\r\n            if (++t > c) { // finish\r\n                clearInterval(timer);\r\n                piece.position = pos;\r\n                piece.offsetRect.moveTo(left, top);\r\n                piece.targetIndicator = null;\r\n                piece.targetIndicatorAlpha = 0.2;\r\n                piece.parent.isThreadCompleted = true; // release mutex\r\n                return;\r\n            }\r\n            // t=0，ratio=1; t=c, ratio=0\r\n            let ratio = 0;\r\n            if (t <= c / 2) { // \r\n                ratio = 2 * t / c; // \r\n                ratio = 1 - 0.5 * ratio * ratio * ratio * ratio;\r\n            } else {\r\n                ratio = 2 - 2 * t / c;\r\n                ratio = 0.5 * ratio * ratio * ratio * ratio;\r\n            }\r\n            piece.offsetRect.moveTo(left - dx * ratio, top - dy * ratio);\r\n            piece.targetIndicatorAlpha = 0.2 * ratio;\r\n            piece.parent.redraw();\r\n        }, 40);\r\n        // update position\r\n        this.position = pos;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/UI/Piece.ts","import Point from '../common/Point';\r\nimport Move from '../common/Move';\r\nimport Piece from './Piece';\r\n\r\n// something very similar to Move but used in Board UI\r\nexport default class Record {\r\n    public from: Point;\r\n    public to: Point;\r\n    public piece: Piece | null;\r\n    constructor(move: Move, piece: Piece | null = null) {\r\n        this.from = move.from.clone();\r\n        this.to = move.to.clone();\r\n        this.piece = piece;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/UI/Record.ts","export enum MESSAGE {\r\n    RESIGN = \"Resign. You won!!!\",\r\n    WIN = \"Congratulations, You won!!!\",\r\n    LOST = \"Sorry, you have lost the game.\",\r\n    DRAW = \"Well, the game is drawn.\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Message.ts","import { PLAYER } from './common/define';\r\nimport Layout from './UI/setting/Layout';\r\nimport BoardStyle from './UI/setting/BoardStyle';\r\nimport PieceStyle from './UI/setting/PieceStyle';\r\n\r\nexport default class Setting {\r\n    // position and size\r\n    public static layout:Layout = new Layout(30,50,20,36,400,450,460,510);\r\n    // color and font\r\n    public static style = {\r\n        board: new BoardStyle(\"#630\", \"#fed\", \"36px DFKai-SB, STKaiti\"),\r\n        piece: (owner: PLAYER): PieceStyle => {\r\n            switch (owner) {\r\n                case PLAYER.Red:\r\n                    return new PieceStyle(\"#fa8\", \"#fc9\", \"36px DFKai-SB, STKaiti\", \"#c00\");\r\n                case PLAYER.Black:\r\n                    return new PieceStyle(\"#fa8\", \"#fc9\", \"36px DFKai-SB, STKaiti\", \"#090\");\r\n            }\r\n        }\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/Setting.ts","export default class Layout {\r\n    public padding: number;\r\n    public cell: number;\r\n    public chessRadius: number;\r\n    public fontSize: number;\r\n    public width: number;\r\n    public height: number;\r\n    public offsetWidth: number;\r\n    public offsetHeight: number;\r\n    constructor(\r\n        padding: number,\r\n        cell: number,\r\n        chessRadius: number,\r\n        fontSize: number,\r\n        width: number,\r\n        height: number,\r\n        offsetWidth: number,\r\n        offsetHeight: number\r\n    ) {\r\n        this.padding = padding;\r\n        this.cell = cell;\r\n        this.chessRadius = chessRadius;\r\n        this.fontSize = fontSize;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.offsetWidth = offsetWidth;\r\n        this.offsetHeight = offsetHeight;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/UI/setting/Layout.ts","export default class BoardStyle {\r\n    public border: string;\r\n    public background: string;\r\n    public font: string;\r\n    constructor(border: string, background: string, font: string) {\r\n        this.border = border;\r\n        this.background = background;\r\n        this.font = font;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/UI/setting/BoardStyle.ts","export default class PieceStyle {\r\n    public border: string;\r\n    public background: string;\r\n    public font: string;\r\n    public fontColor: string;\r\n    constructor(border: string, background: string, font: string, fontColor: string) {\r\n        this.border = border;\r\n        this.background = background;\r\n        this.font = font;\r\n        this.fontColor = fontColor;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/UI/setting/PieceStyle.ts","import SearchEngine from '../SearchEngine';\r\nimport Board from '../../common/Board';\r\nimport Move from '../../common/Move';\r\n\r\nimport HistoryHeuristic from '../HistoryHeuristic';\r\nimport { ENTRYTYPE, Item, TranspositionTable } from '../TranspositionTable';\r\nimport { mergeSort } from '../../common/tools';\r\n\r\n\r\n// NegaScout with history heuristic, transposition table and iterative deepening improvement\r\nexport default class IterativeDeepeningNegaScout_TT_HH extends SearchEngine{\r\n    private TT: TranspositionTable;\r\n    private HH: HistoryHeuristic;\r\n    private timeStart: number = 0; // time in milliseconds\r\n    private timeLimit: number = 0;\r\n    private currentMaxDepth: number = 0; // iterative deepening\r\n    private timeOut: boolean = false; // terminate search\r\n    private backupBestMove: Move | null = null;\r\n    private backupScore: number = 0;\r\n    constructor() {\r\n        super();\r\n        this.TT=new TranspositionTable(20);\r\n        this.HH=new HistoryHeuristic();\r\n    }\r\n    searchAGoodMove(board: Board, timeLimit: number): Move | null {\r\n        console.log(board.toString());\r\n        this.timeOut = false;\r\n        this.timeStart = (new Date()).getTime();\r\n        this.timeLimit = timeLimit;\r\n        this.bestMove = null;\r\n        this.backupBestMove = null;\r\n        this.maxDepth = 1;\r\n        while (!this.timeOut) {\r\n            this.bestMove = null;\r\n            this.HH.clear();\r\n            this.TT.hash(board);\r\n            this.currentBoard = board.clone();\r\n            let score = this.negascout(this.maxDepth, this.evaluator.LOST, this.evaluator.WIN);\r\n            if (this.timeOut) break;\r\n            this.backupScore = score;\r\n            if (this.bestMove != null) this.backupBestMove = this.bestMove!.clone();\r\n            this.maxDepth += 1;\r\n        }\r\n        this.setStatus(this.backupScore);\r\n        console.log(\"score:\" + this.backupScore);\r\n        console.log(\"time:\" + (new Date().getTime() - this.timeStart).toString() + \"ms\");\r\n        console.log(\"depth:\" + (this.maxDepth - 1));\r\n        return this.backupBestMove;\r\n    }\r\n    private negascout(depth: number, alpha: number, beta: number): number {\r\n        if (this.timeOut) return 0; // time out\r\n        if (new Date().getTime() - this.timeStart >= this.timeLimit) {\r\n            this.timeOut = true;\r\n            return 0;\r\n        };\r\n        let isOwn = ((this.maxDepth - depth) % 2 == 0);\r\n        let score = this.quickEvaluate(this.maxDepth - depth);\r\n        if (score != 0) return score; // terminal node\r\n        // look-up in transposition table\r\n        let item = this.TT.lookup(alpha, beta, depth, isOwn);\r\n        if (item != null) return item.score;\r\n\r\n        if (depth <= 0) { // Leaf\r\n            score = this.evaluator.evaluate(this.currentBoard);\r\n            this.TT.update(ENTRYTYPE.Exact, score, depth, isOwn);\r\n            return score;\r\n        }\r\n\r\n        let possible = this.generator.getPossibleMoves(this.currentBoard);\r\n        if (possible.length == 0) { // terminal node\r\n            return this.stalemate(this.maxDepth - depth);\r\n        }\r\n        // adjust order according to history \r\n        mergeSort(possible, (a: Move, b: Move) => this.HH.get(a) > this.HH.get(b));\r\n\r\n        let isFirstNode = true;\r\n        // suppose fail low, for all chindren, score < alpha\r\n        // alpha will not be updated by score, and finally alpha is the upper bound of score\r\n        let entryType = ENTRYTYPE.UpperBound;\r\n        for (let move of possible) {\r\n            // update hash key\r\n            let piece = this.currentBoard.at(move.from);\r\n            if (piece == null) throw Error(\"Invalid Move!\");\r\n            let target = this.currentBoard.at(move.to);\r\n            this.TT.hashMove(move, piece, target);\r\n            // simulate\r\n            this.doMove(move);\r\n\r\n            if (isFirstNode) { // the first node is full window search\r\n                score = -this.negascout(depth - 1, -beta, -alpha);\r\n                isFirstNode = false;\r\n            } else { // for the fallowing node，if fail high, re-search\r\n                score = -this.negascout(depth - 1, -(alpha + 1), -alpha); // search with a null window\r\n                if (alpha < score && score < beta) { // if it failed high\r\n                    score = -this.negascout(depth - 1, -beta, -score); // do a narrow window re-search\r\n                     // alpha = score satisfying the inequality alpha (passed in) < score < beta is an exact value\r\n                    entryType = ENTRYTYPE.Exact;\r\n                }\r\n            }\r\n            this.TT.hashUndoMove(move, piece, target);\r\n            this.undoMove();\r\n            if (score > alpha) {// alpha = max(alpha, score)\r\n                alpha = score;\r\n                if (depth == this.maxDepth) {\r\n                    this.bestMove = move.clone();\r\n                }\r\n            }\r\n            if (alpha > beta) {// beta cut-off\r\n                // alpha = score > beta, the real score is not in range [alpha (passed in), beta]\r\n                // the score is greater than beta, and alpha (current) is the lower boud of score\r\n                entryType = ENTRYTYPE.LowerBound;\r\n            }\r\n        }\r\n        this.TT.update(entryType, alpha, depth, isOwn);\r\n        if (this.bestMove != null) {\r\n            this.HH.update(this.bestMove, this.currentMaxDepth - depth);\r\n        }\r\n        return alpha;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/AI/SearchEngines/IterativeDeepeningNegaScout_TT_HH.ts","import Board from '../common/Board';\r\nimport Move from '../common/Move';\r\nimport Evaluator from './Evaluator';\r\nimport MoveGenerator from './MoveGenerator';\r\nimport Rule from '../common/Rule';\r\nimport { STATUS } from '../common/define';\r\n\r\nexport default abstract class SearchEngine {\r\n    protected currentBoard!: Board;\r\n    protected evaluator!: Evaluator;\r\n    protected generator!: MoveGenerator;\r\n\r\n    protected maxDepth: number = 3;\r\n    protected bestMove: Move | null = null;\r\n    protected status: STATUS = STATUS.NotEnded;\r\n    protected resignStep: number = 1;\r\n    protected winStep: number = 0;\r\n\r\n    protected searchNodes: number = 0; // only for log\r\n\r\n    constructor() {\r\n\r\n    }\r\n    public abstract searchAGoodMove(board: Board, timeLimit?: number): Move | null;\r\n    public get STATUS(): STATUS{\r\n        return this.status;\r\n    }\r\n    setSearchDepth(depth: number): void {\r\n        this.maxDepth = depth;\r\n    }\r\n    setEvaluator(evaluator: Evaluator): void {\r\n        this.evaluator = evaluator;\r\n    }\r\n    setMoveGenerator(generator: MoveGenerator): void {\r\n        this.generator = generator;\r\n    }\r\n    protected doMove(move:Move): void {\r\n        this.currentBoard.doMove(move);\r\n    }\r\n    protected undoMove(): void {\r\n        this.currentBoard.undoMove();\r\n    }\r\n    protected quickEvaluate(depth: number): number {\r\n        // depth = distance from root\r\n        // depth=0, 2, 4, 6,...: self;\r\n        // depth=1, 3, 5, 7,...: oppenent\r\n        let status = this.currentBoard.quickTestStatus();\r\n        switch (status) {\r\n            case STATUS.Win:\r\n                return this.evaluator.win(depth); // depth small first, win\r\n            case STATUS.Lost:\r\n                return this.evaluator.lost(depth); // lost\r\n            case STATUS.FlyCheck:\r\n                // Notice: If search engine can find out fly check as early as possible,\r\n                // the fly check found must be caused by oppenent, because the fly check\r\n                // by self should be tested in previous search.\r\n                return this.evaluator.win(depth);\r\n            case STATUS.Impossbile:\r\n                throw new Error(\"Impossible!\");\r\n        }\r\n        return 0; // STATUS.NotEnded\r\n    }\r\n    protected stalemate(step: number) {\r\n        return this.evaluator.lost(step);\r\n    }\r\n    protected setStatus(score: number) {\r\n        if (this.evaluator.isWin(score,this.winStep)) this.status = STATUS.Win;\r\n        else if (this.evaluator.isLost(score,this.resignStep)) this.status = STATUS.Lost;\r\n        else this.status = STATUS.NotEnded;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/SearchEngine.ts","import { SIZE, PLAYER, pos2idx } from '../common/define';\nimport Move from '../common/Move';\n\n// The History Heuristic and Alpha - Beta Search Enhancements in Practice, Jonathan Schaeffer, 1989\n\nexport default class HistoryHeuristic {\n    private historyTable: Array<Array<number>>;\n    private targetBuff: Array<number>;\n    constructor(){\n        // 90 * 90 matrix with 0\n        this.historyTable = Array.apply(null, Array(SIZE.files * SIZE.ranks)).map(() =>\n            Array.apply(null, Array(SIZE.files * SIZE.ranks)).map(() => 0)\n        );\n        this.targetBuff=new Array();\n    }\n    clear() {\n        this.historyTable.map((row) => row.map(() => 0));\n    }\n    get(move:Move):number{\n        let from = pos2idx(move.from.x, move.from.y),\n            to = pos2idx(move.to.x, move.to.y);\n        return this.historyTable[from][to];\n    }\n    update(move: Move, depth: number): void{\n        let from = pos2idx(move.from.x, move.from.y),\n            to = pos2idx(move.to.x, move.to.y);\n        this.historyTable[from][to] += 2 << depth; // a value recommand by Schaeffer\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/HistoryHeuristic.ts","import { SIZE, PLAYER, PIECE } from '../common/define';\r\nimport Board from '../common/Board';\r\nimport Piece from '../common/Piece';\r\nimport Point from '../common/Point';\r\nimport Move from '../common/Move';\r\n\r\nexport enum ENTRYTYPE {\r\n    Exact,\r\n    LowerBound,\r\n    UpperBound\r\n};\r\n\r\nexport class Item {\r\n    public checkSum: [number, number]; // 64bit\r\n    public entryType: ENTRYTYPE;\r\n    public score: number;\r\n    public depth: number;\r\n    constructor(checkSum: [number, number], entryType: ENTRYTYPE, score: number, depth: number) {\r\n        this.checkSum = [checkSum[0], checkSum[1]]; // by value, instead of by reference\r\n        this.entryType = entryType;\r\n        this.score = score;\r\n        this.depth = depth;\r\n    }\r\n};\r\n\r\n// Zobrist hashing\r\nexport class TranspositionTable {\r\n    private size: number = 0; // size in bit\r\n    private hashKey32: number = 0;\r\n    private hashKey32Table: Array<Array<Array<number>>> = [];\r\n    private hashKey64: [number, number] = [0, 0];\r\n    private hashKey64Table: Array<Array<Array<[number, number]>>> = [];\r\n    private transposition: [Array<Item | null>, Array<Item | null>] = [[],[]];// for self, and oppenent\r\n    private rand32(): number{\r\n        return Math.floor(Math.random() * ~(1 << 31));\r\n    }\r\n    private rand64(): [number, number] {\r\n        return [this.rand32(), this.rand32()];\r\n    }\r\n    constructor(size: number) {\r\n        this.size = size;\r\n        this.initializeHashKey();\r\n    }\r\n    // base value for (piece, file, rank)\r\n    private initializeHashKey(): void {\r\n        this.hashKey32Table = new Array(14);\r\n        this.hashKey64Table = new Array(14);\r\n        for (let i = 0; i < 14; ++i) { // number of piece type x number of player\r\n            this.hashKey32Table[i] = new Array(SIZE.files);\r\n            this.hashKey64Table[i] = new Array(SIZE.files);\r\n            for (let j = 0; j < SIZE.files; ++j) {\r\n                this.hashKey32Table[i][j] = new Array(SIZE.ranks);\r\n                this.hashKey64Table[i][j] = new Array(SIZE.ranks);\r\n                for (let k = 0; k < SIZE.ranks; ++k) {\r\n                    this.hashKey32Table[i][j][k] = this.rand32();\r\n                    this.hashKey64Table[i][j][k] = this.rand64();\r\n                }\r\n            }\r\n        }\r\n        this.transposition = [new Array(1 << this.size), new Array(1 << this.size)];\r\n        for (let i = 0; i < (1 << this.size); ++i) {\r\n            this.transposition[0][i] = null;\r\n            this.transposition[1][i] = null;\r\n        }\r\n    }\r\n    private getPieceIndex(piece: Piece):number {\r\n        let idx: number;\r\n        switch (piece.type) {\r\n            case PIECE.King: idx = 0; break;\r\n            case PIECE.Guard: idx = 1; break;\r\n            case PIECE.Bishop: idx = 2; break;\r\n            case PIECE.Knight: idx = 3; break;\r\n            case PIECE.Rook: idx = 4; break;\r\n            case PIECE.Cannon: idx = 5; break;\r\n            case PIECE.Pawn: idx = 6; break;\r\n            default: throw Error(\"Unknown Piece Type\");\r\n        }\r\n        return piece.owner == PLAYER.Red ? idx * 2 : idx * 2 + 1;\r\n    }\r\n    hash(board: Board):void {\r\n        this.hashKey32 = 0;\r\n        this.hashKey64 = [0, 0];\r\n        let pos = new Point(0, 0);\r\n        for (let j = 0; j < SIZE.files; ++j) {\r\n            for (let k = 0; k < SIZE.ranks; ++k) {\r\n                pos.moveTo(j, k);\r\n                let piece = board.at(pos);\r\n                if (piece == null) continue;\r\n                let idx = this.getPieceIndex(piece);\r\n                this.hashKey32 = this.hashKey32 ^ this.hashKey32Table[idx][j][k];\r\n                this.hashKey64 = [\r\n                    this.hashKey64[0] ^ this.hashKey64Table[idx][j][k][0],\r\n                    this.hashKey64[1] ^ this.hashKey64Table[idx][j][k][1]\r\n                ];\r\n            }\r\n        }\r\n    }\r\n    //  incremental hash\r\n    hashMove(move: Move, piece: Piece, target: Piece | null): void {\r\n        let idx = this.getPieceIndex(piece);\r\n        this.hashKey32 = this.hashKey32 ^ this.hashKey32Table[idx][move.from.x][move.from.y];\r\n        this.hashKey64 = [\r\n            this.hashKey64[0] ^ this.hashKey64Table[idx][move.from.x][move.from.y][0],\r\n            this.hashKey64[1] ^ this.hashKey64Table[idx][move.from.x][move.from.y][1]\r\n        ];\r\n        if (target != null) {\r\n            idx = this.getPieceIndex(target);\r\n            this.hashKey32 = this.hashKey32 ^ this.hashKey32Table[idx][move.to.x][move.to.y];\r\n            this.hashKey64 = [\r\n                this.hashKey64[0] ^ this.hashKey64Table[idx][move.to.x][move.to.y][0],\r\n                this.hashKey64[1] ^ this.hashKey64Table[idx][move.to.x][move.to.y][1]\r\n            ];\r\n        }\r\n    }\r\n    // Notice: Here we do not use move and board(by reference) to find target piece,\r\n    // because such a method depends on the order of board.undoMove() and this.hashUndoMove().\r\n    // Function hashUndoMove() can not know if board.undoMove already changed board information or not.\r\n    hashUndoMove(move: Move, piece: Piece, target: Piece | null): void {\r\n        let idx: number;\r\n        if (target != null) {\r\n            idx = this.getPieceIndex(target);\r\n            this.hashKey32 = this.hashKey32 ^ this.hashKey32Table[idx][move.to.x][move.to.y];\r\n            this.hashKey64 = [\r\n                this.hashKey64[0] ^ this.hashKey64Table[idx][move.to.x][move.to.y][0],\r\n                this.hashKey64[1] ^ this.hashKey64Table[idx][move.to.x][move.to.y][1]\r\n            ];\r\n        }\r\n        idx = this.getPieceIndex(piece);\r\n        this.hashKey32 = this.hashKey32 ^ this.hashKey32Table[idx][move.from.x][move.from.y];\r\n        this.hashKey64 = [\r\n            this.hashKey64[0] ^ this.hashKey64Table[idx][move.from.x][move.from.y][0],\r\n            this.hashKey64[1] ^ this.hashKey64Table[idx][move.from.x][move.from.y][1]\r\n        ];\r\n    }\r\n    lookup(alpha: number, beta: number, depth: number, isOwn: boolean): Item | null {\r\n        let mask = (1 << this.size) - 1;\r\n        let key = this.hashKey32 & mask;\r\n        let pht = this.transposition[isOwn ? 0 : 1][key];\r\n\r\n        if (pht == null) return null; // not found\r\n        if (pht.depth >= depth && (pht.checkSum[0] == this.hashKey64[0] &&\r\n                pht.checkSum[1] == this.hashKey64[1])) {\r\n            switch (pht.entryType) {\r\n                case ENTRYTYPE.Exact:\r\n                    return pht;\r\n                case ENTRYTYPE.LowerBound:\r\n                    if (pht.score >= beta) return pht;\r\n                    break;\r\n                case ENTRYTYPE.UpperBound:\r\n                    if (pht.score <= alpha) return pht;\r\n                    break;\r\n            }\r\n        }\r\n        return null; // not found\r\n    }\r\n    update(type: ENTRYTYPE, score: number, depth: number, isOwn: boolean): void {\r\n        let mask = (1 << this.size) - 1;\r\n        let key = this.hashKey32 & mask;\r\n        this.transposition[isOwn ? 0 : 1][key] = new Item(this.hashKey64, type, score, depth);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/TranspositionTable.ts","export function mergeSort<T>(source: Array<T>, compare: (a: T, b: T) => boolean) {\r\n    let s = 1, n = source.length;\r\n    let buff: Array<T> = new Array(n);\r\n    while (s < n) {\r\n        mergeAll(source, buff, s, n, compare);\r\n        s += s;\r\n        mergeAll(buff, source, s, n, compare);\r\n        s += s;\r\n    }\r\n}\r\n// merge [l, m] and [m+1, r]\r\nfunction merge<T>(source: Array<T>, target: Array<T>, l: number, m: number, r: number, compare: (a: T, b: T) => boolean) {\r\n    let i = l, j = m + 1, k = l;\r\n    while ((i <= m) && (j <= r))\r\n        if (compare(source[i],source[j])) target[k++] = source[i++];\r\n        else target[k++] = source[j++];\r\n    if (i > m) for (let q = j; q <= r; ++q) target[k++] = source[q];\r\n    else for (let q = i; q <= m; ++q) target[k++] = source[q];\r\n}\r\nfunction mergeAll<T>(source: Array<T>, target: Array<T>, s: number, n, compare: (a: T, b: T) => boolean) {\r\n    let i = 0;\r\n    while (i <= n - 2 * s) { // merge two s-range \r\n        merge(source, target, i, i + s - 1, i + 2 * s - 1, compare);\r\n        i = i + 2 * s;\r\n    }\r\n    if (i + s < n) merge(source, target, i, i + s - 1, n - 1, compare);\r\n    else for (let j = i; j <= n - 1; ++j) target[j] = source[j];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common/tools.ts","import Evaluator from '../Evaluator';\r\nimport Point from '../../common/Point';\r\nimport Board from '../../common/Board';\r\nimport Rule from '../../common/Rule';\r\nimport { PLAYER, PIECE, SIZE, pos2idx } from '../../common/define';\r\n\r\n// score:\r\n// -20000, already lost\r\n// ...,\r\n// -19901, lost after n-1 steps\r\n// -19900, lost after n steps\r\n// -19899, almost lost\r\n// ...\r\n// 0,\r\n// ...\r\n// 19899, almost win\r\n// 19900, win after n steps\r\n// 19901, win after n-1 steps\r\n// ...\r\n// 20000, already win\r\n\r\nexport default class SimpleEvaluator extends Evaluator {\r\n    private static baseValue = function (piece: PIECE): number {\r\n        switch (piece) {\r\n            case PIECE.Pawn: return 100;\r\n            case PIECE.Guard: return 200;\r\n            case PIECE.Bishop: return 200;\r\n            case PIECE.Rook: return 900;\r\n            case PIECE.Knight: return 400;\r\n            case PIECE.Cannon: return 450;\r\n            case PIECE.King: return 10000;\r\n        }\r\n    }\r\n    // value of each reachable position\r\n    private static flexibility = function (piece: PIECE): number {\r\n        switch (piece) {\r\n            case PIECE.Pawn: return 15;\r\n            case PIECE.Guard: return 1;\r\n            case PIECE.Bishop: return 1;\r\n            case PIECE.Rook: return 6;\r\n            case PIECE.Knight: return 12;\r\n            case PIECE.Cannon: return 6;\r\n            case PIECE.King: return 0;\r\n        }\r\n    }\r\n    // extra value for pawn\r\n    private static extraPawnValue = function (board: Board, owner: PLAYER, pos: Point): number {\r\n        let value: Array<Array<number>> = [\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [70, 70, 70, 70, 70, 70, 70, 70, 70],\r\n            [70, 90, 110, 110, 110, 110, 110, 90, 70],\r\n            [90, 90, 110, 120, 120, 120, 110, 90, 90],\r\n            [90, 90, 110, 120, 120, 120, 110, 90, 90],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        ];\r\n        if (owner === board.upSidePlayer) return value[pos.x][pos.y];\r\n        else return value[pos.x][SIZE.ranks - pos.y];\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.threshold = 19900;\r\n        this.maxSearchDepth = 100;\r\n    };\r\n    evaluate(board: Board): number {\r\n        // fisrt round scanning : statistics (per piece)\r\n        // 1. how many pieces guard this piece\r\n        // 2. how many pieces threat this piece\r\n        // 3. how many poosible moves of this piece\r\n        let attack = Array.apply(null, Array(SIZE.files * SIZE.ranks)).map(() => 0);\r\n        let guard = Array.apply(null, Array(SIZE.files * SIZE.ranks)).map(() => 0);\r\n        let flexibility = Array.apply(null, Array(SIZE.files * SIZE.ranks)).map(() => 0);\r\n        let possible = Rule.getPossibleMoves(board, false);\r\n        for (let move of possible) {\r\n            let from = pos2idx(move.from.x, move.from.y);\r\n            let to = pos2idx(move.to.x, move.to.y);\r\n            if (move.protege != null) {\r\n                guard[to] += 1;\r\n            } else if (move.target !== null) {\r\n                let attacker = board.at(move.from);\r\n                let attackee = board.at(move.to);\r\n                if (attacker==null || attackee == null) throw Error(\"Piece Not Found!\");\r\n                attack[to] += 3 + Math.floor(0.01 * (SimpleEvaluator.baseValue(attackee.type) - SimpleEvaluator.baseValue(attacker.type)));\r\n                // checkmate\r\n                if (attackee.type === PIECE.King) {\r\n                    // owner can do nothing\r\n                    if (board.currentMover !== attackee.owner) {\r\n                        return this.WIN;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // second round scanning : score\r\n        // 1. base, flexibility, extra value related to position\r\n        // 2. threat, guard\r\n        let self: number = 0;\r\n        let opponent: number = 0;\r\n        for (let x = 0; x < SIZE.files; ++x) {\r\n            for (let y = 0; y < SIZE.ranks; ++y) {\r\n                let piece = board.at(new Point(x, y));\r\n                if (piece == null) continue;\r\n                let pos = pos2idx(x, y);\r\n                let pieceValue = 0;\r\n                // Part 1: value of piece itself\r\n                pieceValue += SimpleEvaluator.baseValue(piece.type); // 1. base value\r\n                pieceValue += SimpleEvaluator.flexibility(piece.type) * flexibility[pos]; // 2. flexibility\r\n                if (piece.type === PIECE.Pawn) {\r\n                    pieceValue += SimpleEvaluator.extraPawnValue(board, piece.owner, new Point(x, y)); // 3. extra value depends on position\r\n                }\r\n                // Part 2: adjust value according to relationships with other pieces\r\n                let unit = Math.floor(SimpleEvaluator.baseValue(piece.type) / 16);\r\n                if (attack[pos] > 0) { //  menace from others\r\n                    if (board.currentMover === piece.owner) { // for own pieces\r\n                        if (piece.type === PIECE.King) { // king is in check\r\n                            pieceValue -= 20; // state of emergency, must remove the threat immediately\r\n                        } else {\r\n                            pieceValue -= 2 * unit; // the threat vaules 2 unit\r\n                            if (guard[pos] > 0) pieceValue += unit; // guarded by others, decrease the threat\r\n                        }\r\n                    } else { // for opponent's pieces\r\n                        if (piece.type === PIECE.King) { // checkmate\r\n                            return this.WIN;\r\n                        }\r\n                        pieceValue -= 10 * unit; // attack, the threat vaules 10 unit\r\n                        if (guard[pos] > 0) pieceValue += 9 * unit; // guarded by others, decrease the threat\r\n                    }\r\n                    // More threat with capture, less chance for survival,\r\n                    // which is for exchange evaluation.\r\n                    pieceValue -= attack[pos];\r\n                } else {\r\n                    // If a piece is only guarded by others without threat from others,\r\n                    // the active defense should increase safety a little.\r\n                    if (guard[pos] > 0) pieceValue += 5;\r\n                }\r\n                if (piece.isOwnedBy(board.currentMover)) {\r\n                    self += pieceValue;\r\n                } else {\r\n                    opponent += pieceValue;\r\n                }\r\n            }\r\n        }\r\n        return self - opponent;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/Evaluators/SimpleEvaluator.ts","import Board from '../common/Board';\r\nimport { STATUS } from \"../common/define\";\r\n\r\n// score\r\n// -(threshold+maxSearchDepth), already lost\r\n// ...,\r\n// -(threshold+1), lost after n-1 steps\r\n// -threshold, lost after n steps\r\n// -(threshold-1), almost lost\r\n// ...\r\n// 0,\r\n// ...\r\n// threshold-1, almost win\r\n// threshold, win after n steps\r\n// threshold+1, win after n-1 steps\r\n// ...\r\n// threshold+maxSearchDepth, already win\r\n\r\nexport default abstract class Evaluator {\r\n    public abstract evaluate(board: Board): number;\r\n    protected threshold: number = 0;\r\n    protected maxSearchDepth: number = 0;\r\n    get WIN(): number {\r\n        return this.threshold + this.maxSearchDepth;\r\n    }\r\n    get LOST(): number {\r\n        return -(this.threshold + this.maxSearchDepth);\r\n    }\r\n    win(step: number): number {\r\n        return this.threshold + this.maxSearchDepth - step;\r\n    }\r\n    lost(step: number): number {\r\n        return -(this.threshold + this.maxSearchDepth - step);\r\n    }\r\n    isWin(score: number, step:number): boolean {\r\n        return score >= this.threshold + this.maxSearchDepth - step;\r\n    }\r\n    isLost(score: number, step:number): boolean {\r\n        return score <= -(this.threshold + this.maxSearchDepth - step);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/Evaluator.ts","import Board from '../../common/Board';\r\nimport Move from '../../common/Move';\r\nimport Rule from '../../common/Rule';\r\nimport MoveGenerator from '../MoveGenerator';\r\n\r\nexport default class SimpleMoveGenerator extends MoveGenerator {\r\n    getPossibleMoves(board: Board): Array<Move> {\r\n        return Rule.getPossibleMoves(board, true);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/MoveGenerators/SimpleMoveGenerator.ts","import Board from '../common/Board';\r\nimport Move from '../common/Move';\r\n\r\nexport default abstract class MoveGenerator{\r\n    abstract getPossibleMoves(board: Board): Array<Move>;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI/MoveGenerator.ts","import Board from './Board';\r\nimport Move from './Move';\r\nimport Piece from './Piece';\r\nimport Point from './Point';\r\nimport Rule from './Rule';\r\nimport { PLAYER, SIZE, PIECE, character } from './define';\r\n\r\nexport default class Notation {\r\n    private static ArabicNumber = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n    private static ChineseNumber = [\"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"];\r\n    public static notatioin(move: Move, board: Board): string {\r\n        let piece = board.at(move.from);\r\n        if (piece == null) throw Error(\"Piece Not Found!\");\r\n        return this.getUniquePieceName(move.from, piece, board) + this.getActionName(move, piece, board);\r\n    }\r\n    private static getUniquePieceName(pos: Point, piece: Piece, board: Board): string {\r\n        let name = character(piece.type, piece.owner);\r\n        if (piece.type == PIECE.King) return name + Notation.getFileName(pos, piece, board);\r\n        let ys: Array<number> = [];\r\n        let p = new Point(pos.x, 0);\r\n        for (; p.y < SIZE.ranks; p.y += 1) {\r\n            let pi = board.at(p);\r\n            if (pi == null) continue;\r\n            if (piece.equals(pi)) ys.push(p.y);\r\n        }\r\n        if (ys.length == 1) {\r\n            return name + Notation.getFileName(pos, piece, board);\r\n        }\r\n        if (ys.length == 2) {\r\n            if (ys[0] === pos.y) {\r\n                if (piece.isOwnedBy(board.upSidePlayer)) return \"前\" + name;\r\n                else return \"後\" + name;\r\n            } else {\r\n                if (piece.isOwnedBy(board.blewSidePlayer)) return \"前\" + name;\r\n                else return \"後\" + name;\r\n            }\r\n        }\r\n        // more than 2, must be pawn\r\n        // check if other files have more than one pawn\r\n        let otherFileWithMultiplePawn = false;\r\n        for (let x = 0; x < SIZE.files; ++x){\r\n            if (x == pos.x) continue;\r\n            let count = 0;\r\n            for (let y = 0; y < SIZE.ranks; ++y) {\r\n                let p = board.at(new Point(x, y));\r\n                if (p == null) continue;\r\n                if (piece.equals(p)) {\r\n                    ++count;\r\n                    if (count >= 2) {\r\n                        otherFileWithMultiplePawn = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (otherFileWithMultiplePawn) { // omit piece name\r\n            name = Notation.getFileName(pos, piece, board);\r\n        }\r\n        let len = ys.length;\r\n        if (ys[0] === pos.y) {\r\n            if (piece.isOwnedBy(board.upSidePlayer)) return \"前\" + name;\r\n            else return \"後\" + name;\r\n        } else if (ys[len - 1] === pos.y) {\r\n            if (piece.isOwnedBy(board.blewSidePlayer)) return \"前\" + name;\r\n            else return \"後\" + name;\r\n        } else if (ys.length === 3) {\r\n            return \"中\" + name;\r\n        } else { // more than three\r\n            if (piece.isOwnedBy(board.upSidePlayer)) {\r\n                if (ys[1] == pos.y) return \"二\" + name;\r\n                if (ys[2] == pos.y) return \"三\" + name;\r\n                if (ys[3] == pos.y) return \"四\" + name;\r\n            } else {\r\n                if (ys[len-2] == pos.y) return \"二\" + name;\r\n                if (ys[len-3] == pos.y) return \"三\" + name;\r\n                if (ys[len-4] == pos.y) return \"四\" + name;\r\n            }\r\n        }\r\n        throw Error(\"Impossible Piece Type!\");\r\n    }\r\n    // From thier own view, number files from right to left. \r\n    // Red use Chinese number, Black use Arabic number.\r\n    private static getFileName(pos: Point, piece: Piece, board: Board): string {\r\n        if (piece.isOwnedBy(board.upSidePlayer)) {\r\n            if (piece.owner === PLAYER.Red) return Notation.ChineseNumber[pos.x];\r\n            else return Notation.ArabicNumber[pos.x];\r\n        } else {\r\n            if (piece.owner === PLAYER.Red) return Notation.ChineseNumber[SIZE.files - pos.x - 1];\r\n            else return Notation.ArabicNumber[SIZE.files - pos.x - 1];\r\n        }\r\n    }\r\n    private static getActionName(move: Move, piece: Piece, board: Board) {\r\n        if (move.from.y == move.to.y) {\r\n            return \"平\" + Notation.getFileName(move.to, piece, board);\r\n        }\r\n        let actionArg: string;\r\n        if (piece.type == PIECE.Guard || piece.type == PIECE.Bishop || piece.type == PIECE.Knight) {\r\n            actionArg = Notation.getFileName(move.to, piece, board);\r\n        } else { // who need count steps\r\n            let steps = Math.abs(move.from.y - move.to.y);\r\n            if (piece.owner == PLAYER.Red) actionArg = Notation.ChineseNumber[steps - 1];\r\n            else actionArg = Notation.ArabicNumber[steps - 1];\r\n        }\r\n        if (piece.isOwnedBy(board.upSidePlayer)) {\r\n            if (move.from.y < move.to.y) return \"進\" + actionArg;\r\n            else return \"退\" + actionArg;\r\n        } else {\r\n            if (move.from.y > move.to.y) return \"進\" + actionArg;\r\n            else return \"退\" + actionArg;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common/Notation.ts"],"sourceRoot":""}